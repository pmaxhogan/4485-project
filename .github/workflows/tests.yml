name: Unit and e2e Testing

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  unit:
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up environment
        uses: ./.github/workflows/test-setup

      - name: Run unit tests
        # see microsoft API for reference on the difference between & and &&:
        # https://learn.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_operators?view=powershell-7.5&viewFallbackFrom=powershell-7.1#call-operator-
        # - oli
        run: |
          .\resources\config-neo4j.ps1 &
          sleep 10 && npm run test:unit "--" --run
      # https://stackoverflow.com/a/65530483
      # you can pass arguments to npm with an extra -- for ubuntu,
      # but -- does something for powershell, so need to put it in quotes - oli

  e2e-frs:
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up environment
        uses: ./.github/workflows/test-setup

        # action needs the Electron Binary when running e2e tests,
        # running npm run package is what ended up making stuff work
        # but if there's a better way you should prolly do it because
        # building a release version just to run tests kinda sucks - oli
      - name: Create Electron Binary
        run: npm run package
        shell: pwsh

      - name: Run e2e requirements tests
        run: |
          .\resources\config-neo4j.ps1 &
          sleep 10 && npm run test:e2e:driver &
          npm run test:e2e "--" --run

  e2e-nfrs:
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up environment
        uses: ./.github/workflows/test-setup

      - name: Create Electron Binary # action needs the Electron Binary when running e2e tests,
        run: npm run package
        shell: pwsh

      - name: Run e2e bench/NFR tests
        run: |
          .\resources\config-neo4j.ps1 &
          sleep 10 && npm run test:e2e:driver &
          npm run test:e2e:bench "--" --run

# - name: Configure Neo4j
#   run: .\resources\config-neo4j.ps1
#   shell: pwsh
